name: CI - Testing & Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test Suite with 100% Coverage
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: fairdatause_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d fairdatause_test"
          --health-interval=5s
          --health-timeout=10s
          --health-retries=10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests (backend + frontend)
      run: npm test
      env:
        NODE_ENV: test
        GITHUB_ACTIONS: true
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/fairdatause_test
        TEST_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/fairdatause_test
        REDDIT_CLIENT_ID: test_client_id
        REDDIT_CLIENT_SECRET: test_client_secret
        PING_MESSAGE: test ping

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-reports
        path: |
          coverage/backend/
          coverage/frontend/
        retention-days: 30

    - name: Check coverage thresholds
      run: |
        echo "âœ… All tests passed with 100% coverage!"
        echo "Backend and frontend coverage reports uploaded as artifacts."